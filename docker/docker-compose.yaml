
include:
  - databases.yml
  - api-services.yml
  - monitoring-metrics-logs.yml
  - exporters.yml

services:
  

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    environment:
        RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
        RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"    
      - "15692:15692" # exporta as metrics prometheus http://rabbitmq:15692/metrics
    command: >
      bash -c "rabbitmq-plugins enable --offline rabbitmq_stream rabbitmq_prometheus && rabbitmq-server"

    volumes:
      - rabbitmq_vol:/var/lib/rabbitmq

  #https://medium.com/@fingervinicius/easy-running-keycloak-with-docker-compose-b0d7a4ee2358
  casoft-store-keycloak:
    container_name: casoft-store-keycloak
    image: quay.io/keycloak/keycloak:26.0
    command: start
    environment:
      KC_HOSTNAME: casoft-store-keycloak
      KC_HOSTNAME_URL: http://casoft-store-keycloak:8080
      KC_HOSTNAME_ADMIN_URL: http://casoft-store-keycloak:8080
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: false
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-db/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - postgres-db

      
volumes:
  mongo_vol:
    driver: local
  postgresql_vol:
    driver: local
  rabbitmq_vol:
    driver: local 
  redis_data:
    driver: local  
  otel_collector_data:
    driver: local
  prometheus_data:
    driver: local
  loki_data:
    driver: local
  grafana_data:
    driver: local
  grafana_config_data:
    driver: local 

networks:
  default:
    name: casoft-network


# docker compose --project-name casoft up -d
# docker compose --project-name casoft up --build -d
# build manual , rodar no nivel dentro da pasta "src" :
#ex: docker build -t casoftlabs/casoft-store-api-gateway:v1.0.9 -f Api.Gateway/Dockerfile .

# Grafana Dashboads IDs:


# ASP.NET Core Endpoint 19925
# ASP.NET Core  19924
# penTelemetry dotnet webapi: 20568
# ASP.NET OTEL Metrics: 17706
# MongoDb:2583
# PostegreSql:9628, 16806
# Redis: 16186,22257,15895 https://redis.io/learn/operate/observability/redisdatasource
# Node exporter: 1860
# RabbitMQ-Overview: 20856,10120,13376
# MassTransit - Messages Monitoring: 17680
# ASP.NET OTEL Metrics from OTEL Collector 19896