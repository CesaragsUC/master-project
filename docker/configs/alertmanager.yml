route:
  receiver: 'Default' # O receptor padrão para alertas que não casam com nenhuma sub-rota.
  group_by: ['alertname', 'team', 'instance'] # Agrupa alertas com os mesmos valores dessas labels em uma única notificação.
  group_wait: 30s # Espera até 30 segundos antes de enviar o primeiro alerta de um novo grupo (útil para agrupar alertas que chegam juntos).
  group_interval: 30s # Tempo mínimo entre notificações para o mesmo grupo de alertas.
  repeat_interval: 30s # intervalo para reenviar alertas não resolvidos.
  routes:

    - receiver: AlertGatewayApi
      group_wait: 10s # Espera só 10 segundos antes de enviar o alerta para esse grupo.
      match:
        team: "casoft-api-gateway" # Se o alerta tiver a label team: "casoft-api-gateway", ele será enviado para o receiver AlertGatewayApi.
      continue: true    # Depois de processar essa rota, o Alertmanager continua avaliando as próximas rotas (útil se você quiser enviar o mesmo alerta para múltiplos receivers).

    - receiver: AlertApiAuth
      group_wait: 10s
      match:
        team: "casoft-store-auth"
      continue: true 

    - receiver: AlertBasketApi
      group_wait: 10s
      match:
        team: "casoft-store-basket"
      continue: true    

    - receiver: AlertBillingApi
      group_wait: 10s
      match:
        team: "casoft-store-billing"
      continue: true 

    - receiver: AlertCatalogApi
      group_wait: 10s
      match:
        team: "casoft-store-catalog"
      continue: true 

    - receiver: AlertDiscountApi
      group_wait: 10s
      match:
        team: "casoft-discount-api"
      continue: true 

    - receiver: AlertOrderApi
      group_wait: 10s
      match:
        team: "casoft-order-api"
      continue: true     

    - receiver: AlertProductApi
      group_wait: 10s
      match:
        team: "casoft-store-product"
      continue: true

    - receiver: AlertProductApiHigh
      group_wait: 10s
      match:
        team: "casoft-store-product"
      continue: true

    - receiver: AlertProductApiLow
      group_wait: 10s
      match:
        team: "casoft-store-product"
      continue: true

    # Rota padrão (fallback)
    - receiver: Default
      match:
        team: ""  # Captura alertas SEM a label 'team'
      continue: false

receivers:
  - name: Default
    webhook_configs:
      - url: 'http://alertview:8181/webhook' # Envia os alertas para o endpoint HTTP http://alertview:8181/webhook.

  - name: AlertGatewayApi
    webhook_configs:
      - url: 'http://alertview:8181/webhook'

  - name: AlertApiAuth
    webhook_configs:
      - url: 'http://alertview:8181/webhook'  
      
  - name: AlertBasketApi
    webhook_configs:
      - url: 'http://alertview:8181/webhook'      

  - name: AlertBillingApi
    webhook_configs:
      - url: 'http://alertview:8181/webhook'

  - name: AlertCatalogApi
    webhook_configs:
      - url: 'http://alertview:8181/webhook'

  - name: AlertDiscountApi
    webhook_configs:
      - url: 'http://alertview:8181/webhook'

  - name: AlertOrderApi
    webhook_configs:
      - url: 'http://alertview:8181/webhook'

  - name: AlertProductApi
    webhook_configs:
      - send_resolved: true
        url: 'http://alertview:8181/webhook' # Também envia para o mesmo endpoint, mas com send_resolved: true, ou seja, envia notificações tanto quando o alerta dispara quanto quando ele é resolvido.

  - name: 'AlertProductApiHigh'
    webhook_configs:
      - send_resolved: true
        url: 'http://promteams:2000/high_priority_channel' # Envia alertas para um canal de alta prioridade em http://promteams:2000/high_priority_channel.

  - name: 'AlertProductApiLow'
    webhook_configs:
      - send_resolved: true
        url: 'http://promteams:2000/low_priority_channel'                                                     
        

# Fluxo resumido:
# O Alertmanager recebe alertas do Prometheus.
# Ele agrupa os alertas conforme group_by.
# Se o alerta tiver team: "casoft-api-gateway", vai para o receiver AlertGatewayApi.
# Caso não case com nenhuma sub-rota, vai para o receiver Default.
# Os receivers definem para onde os alertas serão enviados (webhooks ou outros canais).        