global:
  scrape_interval: 15s # Prometheus coleta (scrape) as métricas dos targets a cada 15 segundos (padrão global).
  scrape_timeout: 10s # Se a coleta demorar mais de 10 segundos, ela é cancelada.
  evaluation_interval: 15s # As regras (alertas, gravações) são avaliadas a cada 15 segundos.

rule_files:
  - "/etc/prometheus/alert.rules.yml" # Lista de arquivos de regras que o Prometheus irá carregar.
  
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
      - targets: 
          - 'alertmanager:9093' # O Alertmanager está disponível no endereço alertmanager:9093 (provavelmente outro container no mesmo ambiente).
          
scrape_configs:
  - job_name: prometheus # Nome do job de scrape
    static_configs:
    - targets:  # Prometheus coleta métricas dele mesmo, acessando o endpoint de métricas local.
        - 'localhost:9090'
        
  - job_name: 'node-exporter'
    static_configs:
      - targets: 
         - 'node-exporter:9100'
         
  - job_name: postgres
    static_configs:
      - targets: ["postgres-exporter:9187"]          

  - job_name: mongodb
    static_configs:
      - targets: ["mongo-exporter:9216"]
      
  - job_name: "redis"
    static_configs:
      - targets: ["localhost:9121"]   
      
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080'] 

  - job_name: 'otel-collector' # Nome do job para o OpenTelemetry Collector.
    scrape_interval: 5s # Frequência de coleta para esse job é de 5 segundos (mais frequente que o global).
    static_configs:
      - targets: ['otel-collector:8889'] # Prometheus coleta métricas do endpoint do otel-collector exposto na porta 8889 (conforme sua config anterior).

  - job_name: 'casoft-store-api-gateway'
    scheme: http
    scrape_interval: 5s
    scrape_timeout: 1s
    metrics_path: /metrics
    static_configs:
      - targets: 
         - 'casoft-store-api-gateway:5214'
        labels:
          team: casoft-store-api-gateway


  - job_name: 'casoft-store-auth'
    scheme: http
    scrape_interval: 5s
    scrape_timeout: 1s
    metrics_path: /metrics
    static_configs:
      - targets: 
         - 'casoft-store-auth:5283'
        labels:
          team: casoft-store-auth


  - job_name: 'casoft-store-basket'
    scheme: http
    scrape_interval: 5s
    scrape_timeout: 1s
    metrics_path: /metrics
    static_configs:
      - targets: 
         - 'casoft-store-basket:5289'
        labels:
          team: casoft-store-basket

  - job_name: 'casoft-store-billing'
    scheme: http
    scrape_interval: 5s
    scrape_timeout: 1s
    metrics_path: /metrics
    static_configs:
      - targets: 
         - 'casoft-store-billing:5066'
        labels:
          team: casoft-store-billing


  - job_name: 'casoft-store-catalog'
    scheme: http
    scrape_interval: 5s
    scrape_timeout: 1s
    metrics_path: /metrics
    static_configs:
      - targets: 
         - 'casoft-store-catalog:5294'
        labels:
          team: casoft-store-catalog

  - job_name: 'casoft-store-discount'
    scheme: http
    scrape_interval: 5s
    scrape_timeout: 1s
    metrics_path: /metrics
    static_configs:
      - targets: 
         - 'casoft-store-discount:5025'
        labels:
          team: casoft-store-discount

  - job_name: 'casoft-store-order'
    scheme: http
    scrape_interval: 5s
    scrape_timeout: 1s
    metrics_path: /metrics
    static_configs:
      - targets: 
         - 'casoft-store-order:5121'
        labels:
          team: casoft-store-order

  - job_name: 'casoft-store-product'
    scheme: http
    scrape_interval: 5s
    scrape_timeout: 1s
    metrics_path: /metrics
    static_configs:
      - targets: 
         - 'casoft-store-product:5256'
        labels:
          team: casoft-store-product
             
  - job_name: 'rabbitmq'
    static_configs:
      - targets: ['rabbitmq-exporter:9419']
      


#Resumo:          
# Prometheus coleta métricas dele mesmo e do otel-collector.
# As regras de alerta estão em um arquivo externo.
# Os alertas são enviados para um Alertmanager.
# O otel-collector é monitorado com uma frequência maior (5s).
# Configuração típica para um ambiente Docker Compose, Kubernetes ou testes locais.          