name: Code Quality and Deploy
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
env:
    DOTNET_VERSION: '8.0.x'
    AZURE_CONTAINER_REGISTRY: casoftregistry
    RESOURCE_GROUP: casoft
jobs:
  build:
    name: Quality Gate ‚öôÔ∏è
    runs-on: ubuntu-latest
    steps:
      - name: Getting project code ‚è≥
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.300   

      - name: Installing dotnet-coverage ‚è≥
        run: dotnet tool install --global dotnet-coverage

      - name: Installing SonarQube ‚è≥
        run: dotnet tool install --global dotnet-sonarscanner   

      - name: Build and Analysis  üõ†Ô∏è
        run: |
          dotnet sonarscanner begin /o:"cesaragsuc" /k:"CesaragsUC_master-project" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --configuration Release
          dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      
      - name: Analysing Quality Gate üëÄüêûüßê
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
        with:
          scanMetadataReportFile: ./.sonarqube/out/.sonar/report-task.txt

      - name: "SonarQube Quality Gate Status:"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

  build-and-deploy-aca:
        runs-on: ubuntu-latest
        needs: build    
        steps:
          - uses: actions/checkout@v4
            
          - name: Set up .NET Core
            uses: actions/setup-dotnet@v4
            with:
              dotnet-version: "8.0.x"
            
          - name: Build
            run: dotnet build --configuration Release
            
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
            
          - name: Log in to ACR
            uses: docker/login-action@v3
            with:
              registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
              username: ${{ secrets.REGISTRY_USERNAME }}
              password: ${{ secrets.REGISTRY_PASSWORD }}
            
          - name: Build and push container Catalog
            uses: docker/build-push-action@v6
            with:
              push: true
              tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_CATALOG }}:${{ github.sha }}
              file: ./src/Api.Catalogo/Dockerfile

          - name: Build and push container Gateway
            uses: docker/build-push-action@v6
            with:
                push: true
                tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_API_GATEWAY }}:${{ github.sha }}
                file: ./src/Api.Gateway/Dockerfile              
            
          - name: Build and push container Auth
            uses: docker/build-push-action@v6
            with:
                push: true
                tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_AUTH }}:${{ github.sha }}
                file: ./src/Auth.Api/Dockerfile 

          - name: Build and push container Basket
            uses: docker/build-push-action@v6
            with:
                 push: true
                 tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_BASKET }}:${{ github.sha }}
                 file: ./src/Basket.Api/Dockerfile 

          - name: Build and push container Billing
            uses: docker/build-push-action@v6
            with:
                  push: true
                  tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_BILLING }}:${{ github.sha }}
                  file: ./src/Billing.Api/Dockerfile     

          - name: Build and push container Discount
            uses: docker/build-push-action@v6
            with:
                  push: true
                  tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_DISCOUNT }}:${{ github.sha }}
                  file: ./src/Discount.Api/Dockerfile    

          - name: Build and push container Product
            uses: docker/build-push-action@v6
            with:
                  push: true
                  tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_PRODUCT }}:${{ github.sha }}
                  file: ./src/Payment.Api/Dockerfile    


          - name: Build and push container Order
            uses: docker/build-push-action@v6
            with:
                  push: true
                  tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_ORDER }}:${{ github.sha }}
                  file: ./src/Api.Gateway/Dockerfile    

          - name: Azure Login
            uses: azure/login@v2
            with:
              creds: ${{ secrets.AZURE_CREDENTIALS }}
            
          - name: Deploy to Azure Container CATALOG
            uses: azure/container-apps-deploy-action@v1
            with:
              imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_CATALOG }}:${{ github.sha }}
              resourceGroup: ${{ env.RESOURCE_GROUP }}
              containerAppName: ${{ env.CONTAINER_APP_CATALOG }}
              environmentVariables: |
                ASPNETCORE_ENVIRONMENT=Production  

          - name: Deploy to Azure Container GATEWAY
            uses: azure/container-apps-deploy-action@v1
            with:
              imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_API_GATEWAY }}:${{ github.sha }}
              resourceGroup: ${{ env.RESOURCE_GROUP }}
              containerAppName: ${{ env.CONTAINER_APP_API_GATEWAY }}
              environmentVariables: |
                ASPNETCORE_ENVIRONMENT=Production            

          - name: Deploy to Azure Container AUTH
            uses: azure/container-apps-deploy-action@v1
            with:
              imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_AUTH }}:${{ github.sha }}
              resourceGroup: ${{ env.RESOURCE_GROUP }}
              containerAppName: ${{ env.CONTAINER_APP_AUTH }}
              environmentVariables: |
                ASPNETCORE_ENVIRONMENT=Production 

          - name: Deploy to Azure Container BASKET
            uses: azure/container-apps-deploy-action@v1
            with:
              imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_BASKET }}:${{ github.sha }}
              resourceGroup: ${{ env.RESOURCE_GROUP }}
              containerAppName: ${{ env.CONTAINER_APP_BASKET }}
              environmentVariables: |
                ASPNETCORE_ENVIRONMENT=Production 

          - name: Deploy to Azure Container BILLING
            uses: azure/container-apps-deploy-action@v1
            with:
              imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_BILLING }}:${{ github.sha }}
              resourceGroup: ${{ env.RESOURCE_GROUP }}
              containerAppName: ${{ env.CONTAINER_APP_BILLING }}
              environmentVariables: |
                ASPNETCORE_ENVIRONMENT=Production 

          - name: Deploy to Azure Container DISCOUNT
            uses: azure/container-apps-deploy-action@v1
            with:
              imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_DISCOUNT }}:${{ github.sha }}
              resourceGroup: ${{ env.RESOURCE_GROUP }}
              containerAppName: ${{ env.CONTAINER_APP_DISCOUNT }}
              environmentVariables: |
                ASPNETCORE_ENVIRONMENT=Production 

          - name: Deploy to Azure Container ORDER
            uses: azure/container-apps-deploy-action@v1
            with:
              imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_ORDER }}:${{ github.sha }}
              resourceGroup: ${{ env.RESOURCE_GROUP }}
              containerAppName: ${{ env.CONTAINER_APP_ORDER }}
              environmentVariables: |
                ASPNETCORE_ENVIRONMENT=Production 

          - name: Deploy to Azure Container PRODUCT
            uses: azure/container-apps-deploy-action@v1
            with:
              imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_APP_PRODUCT }}:${{ github.sha }}
              resourceGroup: ${{ env.RESOURCE_GROUP }}
              containerAppName: ${{ env.CONTAINER_APP_PRODUCT }}
              environmentVariables: |
                ASPNETCORE_ENVIRONMENT=Production 