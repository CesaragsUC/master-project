name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
env:
    DOTNET_VERSION: '8.0.x'
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Configure Encoding
        run: |
          export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
          export LANG=en_US.UTF-8
      
      - name: Installing coverage
        run: dotnet tool install --global dotnet-coverage

      - name: Checkout to main ‚≠ê
        uses: actions/checkout@v4.1.1
        with:
             fetch-depth: 0
      - name: Configuring .NET Core SDK üîß
        uses: actions/setup-dotnet@v4.0.0
        with:
            dotnet-version: ${{ env.DOTNET_VERSION }}     
      - name: Restoring dependencies ‚è≥      
        run: dotnet restore --force --no-cache

      - name: Building Application üöÄ
        run: dotnet build -c Release --no-restore 
              
      - name: Running Unit Tests üß™
        run: dotnet test -c Release --no-build

      - name: Set up JDK 17 üéÉ
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner üõ†Ô∏è
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p .sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

      - name: Build and analyze  üëÄ
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .sonar/scanner/dotnet-sonarscanner begin /k:"CesaragsUC_master-project" /o:"cesaragsuc" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.qualitygate.wait=true
            dotnet build --configuration Release
            dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
          .sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
