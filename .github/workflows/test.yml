
name : Executing Tests
on:
    workflow_call:

jobs:

  unit-tests:
    name: Test code quality üß™
    runs-on: ubuntu-latest
        # Add this to properly support Testcontainers
    env:
      TESTCONTAINERS_RYUK_DISABLED: "true"
      DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP2UNENCRYPTEDSUPPORT: "true"
    concurrency:
          group: example-group
          cancel-in-progress: true  
    # This job will only run on no main branch
    if: github.ref != 'refs/heads/main'   
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: Teste@123
          POSTGRES_DB: postgres
        ports:
          - 5432:5432         
    steps:
    
      # Install Docker to support Testcontainers
      - name: Install Docker
        uses: docker/setup-buildx-action@v3
        
      - name: Getting project code ‚è≥
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.300   

      - name: Installing dotnet-coverage ‚è≥
        run: dotnet tool install --global dotnet-coverage

      - name: Installing SonarQube ‚è≥
        run: dotnet tool install --global dotnet-sonarscanner   

      - name: Build and Analysis  üõ†Ô∏è
        run: |
          dotnet sonarscanner begin /o:"cesaragsuc" /k:"CesaragsUC_master-project" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --configuration Release
          dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      
      - name: Analysing Quality Gate üëÄüêûüßê
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
        with:
          scanMetadataReportFile: ./.sonarqube/out/.sonar/report-task.txt

      - name: "SonarQube Quality Gate Status:"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
