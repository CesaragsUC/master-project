
name : Executing New Release
on:
    workflow_call:

env:
    DOTNET_VERSION: '8.0.x'
    AZURE_CONTAINER_REGISTRY: casoftregistry
    RESOURCE_GROUP: casoft

    # Container Apps
    # Ned to create a container app in Azure with exactly the same name.
    CATALOG_CONTAINER_APP: casoft-store-catalog
    GATEWAY_CONTAINER_APP: casoft-store-api-gateway
    AUTH_CONTAINER_APP: casoft-store-auth
    BASKET_CONTAINER_APP: casoft-store-basket
    BILLING_CONTAINER_APP: casoft-store-billing
    DISCOUNT_CONTAINER_APP: casoft-store-discount
    ORDER_CONTAINER_APP: casoft-store-order
    PRODUCT_CONTAINER_APP: casoft-store-product

jobs:    

  release:
    name: Creating new release
    runs-on: ubuntu-latest
    concurrency:
      group: example-group
      cancel-in-progress: true        
    # This job will only run on the main branch
    if: github.ref == 'refs/heads/main'          
    needs: tests
    permissions:
        contents: write
        security-events: write 
    outputs:
      new_tag: ${{ steps.version_bump.outputs.new_tag }}
    steps:
        - name: Fetching project code ⏳
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

       #https://github.com/DrPsychick/docker-githubtraffic/blob/main/.github/workflows/release.yaml     
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Bump version and push tag
          id: version_bump
          uses: anothrNick/github-tag-action@1.61.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            DEFAULT_BRANCH: main
            DEFAULT_BUMP: patch
            WITH_V: true

        - if: steps.version_bump.outputs.new_tag != steps.version_bump.outputs.old_tag
          name: LogIn to Azure ACR
             uses: docker/login-action@v3
             with:
               registry: ${{ env.azure_container_registry }}.azurecr.io
               username: ${{ secrets.registry_username }}
               password: ${{ secrets.registry_password }}

        - if: steps.version_bump.outputs.new_tag != steps.version_bump.outputs.old_tag
          name: Analysing Dockerfile Catalog.Api
          with:
             dockerfile: ./src/Api.Catalogo/Dockerfile
          uses: hadolint/hadolint-action@v3.1.0 # serve para analisar o Dockerfile em busca de erros e boas práticas


        - name: Build and push image to ACR for Catalog.Api
          uses: docker/build-push-action@v6
          with:
            context: ./src
            file: ./src/Api.Catalogo/Dockerfile
            push: true
            tags: |
                  ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_catalog }}:latest
                  ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_catalog }}:${{ steps.version_bump.outputs.new_tag }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Run Trivy vulnerability scanner on Docker image for Catalog.Api
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_catalog }}:${{ steps.version_bump.outputs.new_tag }}
            format: sarif
            output: 'catalog-results.sarif'
            severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'

        - name: Upload Catalog Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
              sarif_file: catalog-results.sarif 
              category: catalog                                   
#------------------------------------------------------------------------------------
  
        - name: Analysing Dockerfile Product.Api
          with:
             dockerfile: ./src/Api.Produto/Dockerfile
          uses: hadolint/hadolint-action@v3.1.0 

        - name: Build and push image to ACR  for Product.Api
          uses: docker/build-push-action@v3
          with:
            context: ./src
            file: ./src/Api.Produto/Dockerfile
            push: true
            tags: |
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_product }}:latest
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_product }}:${{ steps.version_bump.outputs.new_tag }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Run Trivy vulnerability scanner on Docker image for Product.Api
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_product }}:${{ steps.version_bump.outputs.new_tag }}
            format: sarif
            output: 'product-results.sarif'
            severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'         
            
        - name: Upload Product Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
              sarif_file: product-results.sarif  
              category: product                     
#------------------------------------------------------------------------------------
        - name: Analysing Dockerfile Order.Api
          with:
             dockerfile: ./src/Order.Api/Dockerfile
          uses: hadolint/hadolint-action@v3.1.0 

        - name: Build and push image to ACR for Order.Api
          uses: docker/build-push-action@v3
          with:
            context: ./src
            file: ./src/Order.Api/Dockerfile
            push: true
            tags: |
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_order }}:latest
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_order }}:${{ steps.version_bump.outputs.new_tag }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Run Trivy vulnerability scanner on Docker image for Order.Api
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_order }}:${{ steps.version_bump.outputs.new_tag }}
            format: sarif
            output: 'order-results.sarif'
            severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'         

        - name: Upload Order Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
              sarif_file: order-results.sarif     
              category: order                                  
#------------------------------------------------------------------------------------
        - name: Analysing Dockerfile Discount.Api
          with:
             dockerfile: ./src/Discount.Api/Dockerfile
          uses: hadolint/hadolint-action@v3.1.0 

        - name: Build and push image to ACR for Discount.Api
          uses: docker/build-push-action@v3
          with:
            context: ./src
            file: ./src/Discount.Api/Dockerfile
            push: true
            tags: |
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_discount }}:latest
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_discount }}:${{ steps.version_bump.outputs.new_tag }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Run Trivy vulnerability scanner on Docker image for Discount.Api
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_discount }}:${{ steps.version_bump.outputs.new_tag }}
            format: sarif
            output: 'discount-results.sarif'
            severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'

        - name: Upload Discount Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
              sarif_file: discount-results.sarif      
              category: discount            
#------------------------------------------------------------------------------------
        - name: Analysing Dockerfile Payment.Api
          with:
             dockerfile: ./src/Billing.Api/Dockerfile
          uses: hadolint/hadolint-action@v3.1.0 

        - name: Build and push image to ACR for Billing.Api
          uses: docker/build-push-action@v3
          with:
            context: ./src
            file: ./src/Billing.Api/Dockerfile
            push: true
            tags: |
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_billing }}:latest
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_billing }}:${{ steps.version_bump.outputs.new_tag }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Run Trivy vulnerability scanner on Docker image for Payment.Api
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_billing }}:${{ steps.version_bump.outputs.new_tag }}
            format: sarif
            output: 'payment-results.sarif'
            severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'                


        - name: Upload Payment Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
              sarif_file: payment-results.sarif  
              category: payment
#------------------------------------------------------------------------------------
        - name: Analysing Dockerfile Basket.Api
          with:
             dockerfile: ./src/Basket.Api/Dockerfile
          uses: hadolint/hadolint-action@v3.1.0 

        - name: Build and push image to ACR for Basket.Api
          uses: docker/build-push-action@v3
          with:
            context: ./src
            file: ./src/Basket.Api/Dockerfile
            push: true
            tags: |
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_basket }}:latest
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_basket }}:${{ steps.version_bump.outputs.new_tag }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Run Trivy vulnerability scanner on Docker image for Basket.Api
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_basket }}:${{ steps.version_bump.outputs.new_tag }}
            format: sarif
            output: 'basket-results.sarif'
            severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'                 

        - name: Upload Basket Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
              sarif_file: basket-results.sarif        
              category: basket          
#------------------------------------------------------------------------------------
        - name: Analysing Dockerfile Auth.Api
          with:
             dockerfile: ./src/Auth.Api/Dockerfile
          uses: hadolint/hadolint-action@v3.1.0 

        - name: Build and push image to ACR for Auth.Api
          uses: docker/build-push-action@v3
          with:
            context: ./src
            file: ./src/Auth.Api/Dockerfile
            push: true
            tags: |
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_auth }}:latest
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_auth }}:${{ steps.version_bump.outputs.new_tag }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Run Trivy vulnerability scanner on Docker image for Auth.Api
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_auth }}:${{ steps.version_bump.outputs.new_tag }}
            format: sarif
            output: 'auth-results.sarif'
            severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'

        - name: Upload Auth Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
              sarif_file: auth-results.sarif   
              category: auth               
#------------------------------------------------------------------------------------
        - name: Analysing Dockerfile Api.Gateway
          with:
             dockerfile: ./src/Api.Gateway/Dockerfile
          uses: hadolint/hadolint-action@v3.1.0 

        - name: Build and push image to ACR for Api.Gateway
          uses: docker/build-push-action@v3
          with:
            context: ./src
            file: ./src/Api.Gateway/Dockerfile
            push: true
            tags: |
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_api_gateway }}:latest
                ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_api_gateway }}:${{ steps.version_bump.outputs.new_tag }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Run Trivy vulnerability scanner on Docker image for Api.Gateway
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ env.azure_container_registry }}.azurecr.io/${{ vars.container_app_api_gateway }}:${{ steps.version_bump.outputs.new_tag }}
            format: sarif
            output: 'gateway-results.sarif'
            severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'

        - name: Upload Gateway Trivy scan results to GitHub Security tab
          uses: github/codeql-action/upload-sarif@v3
          with:
              sarif_file: gateway-results.sarif
              category: gateway
#--------------------------------------------------------------------------------------   